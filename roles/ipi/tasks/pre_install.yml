- name: Display Ansible's Python version
  debug:
    var: ansible_python_version
    verbosity: 1

- name: Create ~/.ssh directory if it does not exist
  file:
    path: ~/.ssh
    state: directory
    mode: '0755'

- name: Generate a SSH key-pair
  openssh_keypair:
    path: ~/.ssh/ocp4
    force: false

- name: Clean up existing bin, install-dir and downloads folders
  file: 
    path: "{{ playbook_dir }}/{{ item }}"
    state: absent
  with_items: ["bin", "install-dir", "downloads"]
  when: clean is defined

- name: Must always clean install-dir
  file:
    path: "{{ playbook_dir }}/{{ item }}"
    state: absent
  with_items: ["install-dir"]
  when: clean is not defined

- name: Create bin, install-dir and downloads folders
  file:
    path: "{{ playbook_dir }}/{{ item }}"
    state: directory
    mode: '0755'
  with_items: ["bin", "downloads","downloads/ISOs", "install-dir"]  

- name: Download the oc client binary
  get_url:
    url: "{{ download.openshiftClient }}"
    dest: "{{ playbook_dir }}/downloads/oc_client.tar.gz"
    validate_certs: no
  register: oc_client_download

- name: Download the openshift-install binary
  get_url:
    url: "{{ download.openshiftInstall }}"
    dest: "{{ playbook_dir }}/downloads/openshift_install.tar.gz"
    validate_certs: no
  register: openshift_install_download

- name: Unarchive oc client
  unarchive:
    src: "{{ playbook_dir }}/downloads/oc_client.tar.gz"
    dest: "{{ playbook_dir }}/bin"
  when: oc_client_download is changed

- name: Unarchive openshift-install 
  unarchive:
    src: "{{ playbook_dir }}/downloads/openshift_install.tar.gz"
    dest: "{{ playbook_dir }}/bin"
  when: openshift_install_download is changed

- name: Copy install-config.yaml file into install-dir
  template:
    src: "{{ playbook_dir }}/roles/ipi/templates/install-config-45.yaml.j2"
    dest: "{{ playbook_dir }}/install-dir/install-config.yaml"

- name: Run steps pertaining to proxy, if any
  include: handle_proxy.yml
  when: 
    - proxy is defined
    - proxy.enabled == true

- name: Backup the install-config.yaml file
  copy:
    src: "{{ playbook_dir }}/install-dir/install-config.yaml"
    dest: "{{ playbook_dir }}/install-dir/install-config.yaml.orig"
  when: (registry is not defined) or (registry.enabled is not defined) or (registry.enabled == false)
